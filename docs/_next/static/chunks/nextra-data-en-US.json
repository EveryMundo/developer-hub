{"/examples":{"title":"Examples","data":{"":"https://github.com/EveryMundo/developer-hub/tree/main/examples","live#Live":"Basic hello world in React\nAirlines Standard Fares module demo using Fares services and EDS\nHospitality Low Rates Calendar module demo using Rates services and EDS"}},"/get-started":{"title":"Get Started","data":{"":"To start, you have different options depending on your way of learning. The following sections provide basic knowledge that will help you get the big picture.\nOverview: What's Developer Hub and key concepts.\nCreate a Module: Start creating your first module through tutorials or examples code\nFAQ: Most frequently asked questions about the ecosystem.\nYou also have the Learning section to do an in-depth study of the platform or access the examples repository and experiment using the available tools.","tools#Tools":""}},"/get-started/faq":{"title":"Frequently Asked Questions","data":{"conpositum-dilexit-celebrare-septem-sulphure#Conpositum dilexit celebrare septem sulphure":"Lorem markdownum frangitur. Adde Dianae. Grave duos relinquam carerent in vocat\nin contulerant mentis, dabitur undas munera? Sed ora pudori cur aquis; tum per.","ipse-ide-ab-non-ut-pennas-fertur#Ipse Ide ab non ut pennas fertur":"Ferebat ipse augustae deplanxere: qua clipeum gurgite contigit et quam unam\ninquit lacerata popularis fluxit, nec. Sed ora pudori cur aquis; tum per\nmanus. Phaethon in insistit madent agrestes in virentem\nmorbi non restagnantis carcere!\nCulpavit singula venatibus satis optatos\nPhilomela castris potest potuit est Desinet\nAliquo neve plura poma\nVenit equos abiit fatalia mihi commota ferar\nHabet vocat erigitur arbor parvis adspiciam","coeamus-sequimur-o-sonos-sentiat-enses-in#Coeamus sequimur o sonos sentiat enses in":"Ferendum et eligit trado dederunt incipit quos puerilibus salignis, quisque,\ncarinis, Lesbi, fugabitur! Margine suam dies, petis stamina utile edere nomenque\net mei utramque sitim?\nEt anni fuit et facere per est\nRegalia pampineae Cepheni\nDeum nostro est omnia coepit\nIn ego amplecti lacrimis Pandione\nNatus et erat paulumque saxo qua illum\nSuis extrema viginti","constabat-decent-dixit-ruinam-primosque-et-cycnum#Constabat decent dixit ruinam primosque et Cycnum":"Voluere mensas quidem invide ecce acta solo, totoque habet septem ad agitant\nnostris; hic nubes, iam. Fas auxiliaris pervenit erat delubra duas habet\nexsiluit tantosque nostris remansit molle columbam. Quoniam videt, poterit omnis\ncurvamine tantum illa, in usurus poenas.Rector serpente macies velamenta tormenta? Undas idem licet eras furtim. Omnia\ncuria terram, mea mutua gigantas satis; miserata dixerat, caecisque verba\nnec Lenis, aequoribus.","hanc-vacat-antandro-viscera-tecta-mea#Hanc vacat Antandro viscera tecta mea":"Sua Iuno ipsa locus, illis et mitia\nflammae praesente ut manat sustinuit, madefient, felix cretus. Latices ille et\ninceptaque omnes inquit, nec illa pinus vara fuerat miles.In quae tamque mensae Palilibus gemelliparae puppis nunc nostrum trepidosque,\nTyrrhenus ferrum. Coepta his est redde vivax nomen nisi non venti sub ferae\nlacusque! Mecum circumsona terret, aestu; cristati antro!"}},"/get-started/overview":{"title":"What's Developer Hub?","data":{"":"Developer Hub is an enterprise ecosystem designed for the creation and distribution of airModules. At its core, the Developer Hub is a platform that empowers developers to build, share, and deploy innovative solutions in the travel industry. The ecosystem leverages cutting-edge technologies to provide a robust and flexible environment where creativity meets functionality.In this section, we'll dive into the key concepts and features of the Developer Hub, explaining how it revolutionizes the development process and fosters a community of collaboration and innovation.","key-concepts#Key Concepts":"Module:\nairModules: Modular components at the heart of Developer Hub. In this documentation we will use airModules and modules interchangeably.  They facilitate the seamless integration and customization of digital experiences, offering scalable and efficient solutions to improve existing systems or develop new applications. From a technical point of view, an airModule is published as a web application embedded in an Iframe with three main requirements: an index.html file, a setup.json file and the use of the Registry Script library. In the future, airModules can also be published as web components, expanding their versatility and integration possibilities.\nDigital contract:\nSetup.json: This JSON file acts as a vital contract between the module and the system. It technically describes  module settings, integration with the design system, label definitions, API usage, resource permissions, ...\nCommand line\nRegistry CLI: A command-line interface tool that facilitates module management. It enables developers to push modules, define new modules, log into the system, and request QA reviews.\nTools:\nEditor: This tool allows for the editing of the setup.json file and provides a visual interface to preview settings, styles, labels, and more, without implementing the module.\nPlayground: A development and testing sandbox where modules can be run independently of the ecosystem integration, offering a flexible environment for experimentation.\nLibraries:\nRegistry Script: A mandatory library that enables communication between the module and the surrounding system.\nAdnetify Script: While not directly used by developers, understanding this library is beneficial. It helps embed modules as iframes on web pages.\nThese concepts are fundamental to understanding and working within the Developer Hub. Each concept will be explained in more detail in dedicated sections of this documentation."}},"/get-started/create-a-module":{"title":"Create a module","data":{"":"A module, called airModule in our system, is technically a web application with specific requirements that will be embedded through an Iframe.For correct integration with the ecosystem all the modules, independent of the technology and frameworks that are decided to use, must have the existence of an index.html file, a setup.json file and the use of the Registry Script library. In addition to this, you must have the Registry CLI package installed, which will allow you to interact with the ecosystem: create, deploy and promote the modules.All modules must also have non-functional requirements associated mostly with performance or security.To create your first module using the Developer Hub you have two useful shortcuts that will help you quickly acclimate to the ecosystem:\nTutorial: Follow our getting started tutorial step by step (using React).\nExamples: Clone any of our examples from the most basic hello tech, or those specialized in areas to the complete demo modules.","tutorial#Tutorial":"","examples#Examples":"https://github.com/EveryMundo/developer-hub/tree/main/examples"}},"/":{"title":"Welcome to Developer Hub Documentation","data":{"popular-pages#Popular pages":"What's Developer Hub?\nTutorial step by step\nRegistry CLI\nSetup.json\nPlayground","contribute#Contribute":"If you're making a relatively small change to the documentation - like fixing a typo or rewording something - the easiest way to contribute is directly on GitHub! You can do this while you're reading the documentation using a link located at the right of each page: Edit this page\nFor more complex contribution fork and clone the documentation repository."}},"/learning":{"title":"Learning","data":{"":"In-depth review of the key concepts of Developer Hub:\nArchitecture\nSetup.json\nEditor\nPlayground\nRegistry CLI\nRegistry Script\nWorkflow"}},"/learning/architecture":{"title":"Architecture","data":{"overview#Overview":"Lorem ipsum lorem ..","live-adnetify#Live Adnetify":""}},"/learning/editor":{"title":"Editor","data":{"":"Editor is a tool from the Developer Hub that accelerates the construction of the digital contract Setup.json without the need for the module to be developed yet.Editor is something like a small development IDE for building Setup Json with auto-completion and validation functionalities.Editor also generates two very useful elements to conceive the module from the beginning:\nUIs that are displayed at different levels of the roles involved in the system, ex: settings, styles, i18n, ...\nA realistic sample of Module Payload."}},"/learning/playground":{"title":"Playground","data":{"":"Playground is a tool that allows the development and QA of a module without the need for the real environment. This tool creates a module payload (input config for Module) with mock data using the configuration specified in Setup JSON.The tool is divided into two main areas:\nModule Preview: The preview of the module that is being reviewed.\nConfiguration UI: The UI to manage and test the module. This last area can be minified to better display the module preview.\nThe Module Preview shows how the module responds to the combinations that have been selected in the Configuration UI. The only input that the module receives is called Module Payload and its exact value can be checked in the Configuration UI.","tabs#Tabs":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","overview#Overview":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","module-payload#Module Payload":"","template#Template":"","viewport#Viewport":"","settings#Settings":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","styles#Styles":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","i18n#I18N":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","logs#Logs":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."}},"/learning/registry-cli":{"title":"Registry CLI","data":{"":"Registry CLI allows a Partner to upload and synchronize a module (previously tested in a local environment) to our platform. It follows good practices carried out by important platforms such as Cloudflare Pages, Vercel, Netlify. So, the workflow can be easily recognized by a developer. It has a configuration file like vercel.json or netlify.toml","instalation#Instalation":"npm i -g @everymundo/em-registry-cli","commands#Commands":"Commands\tDescription\tpush <zipfile>\tPushes your Module\tinit\tInitializes a module with its id\tconfigure\tConfigures credentials\tcreate\tCreates a module on our servers\tlist-modules [options]\tList available modules for you\tpackage [options]\tCreates a package file using the pre-defined command\tpromote [options]\tPuts a specific deployment in a queue for QA to promote it\twhoami\tPrints the current Partner and userId\thelp [command]\tDisplay help for command\t\nFor more information consult the official README of the package: https://www.npmjs.com/package/@everymundo/em-registry-cli"}},"/learning/setup-file":{"title":"Setup.json","data":{"":"Setup JSON represents a digital contract of a module. It is a file (or groups of files) and it defines everything critical from the point of view of business or development that can be expressed in declarative language understood by machines. Allows speeding up the development, part of the QA, distribution and finally the configuration by the client.PROS has chosen to define the schema using the JSON Schema specification, and by doing so provides an open source way of annotating and validating this contract for it's partners and customers.\nThe Setup.json file is a work in progress. Some specifications are subject to change. Specifically, as PROS expands it's airModule™ offerings to support customer verticals, this file will reflect the different definitions required for partners to support this evolution.Current setup.json schema.","what-is-setup-json#What is Setup JSON":"Setup JSON represents a digital contract of a module. It is a file (or groups of files) and it defines everything critical from the point of view of business or development that can be expressed in declarative language understood by machines.Allows speeding up the development, part of the QA, distribution and finally the configuration by the client.The setup.json is closely related to the structure and the data that the module will receive to initialize, called in our ecosystem: Module Payload.","workflow#Workflow":"TODO: Details about uses in development, QA and production","general-structure#General structure":"The setup.json file is a work in progress. Some specifications are subject to change.\nAll Modules include an setup.json file. Here's the general file structure. The specification of each of the sections is explained in detail later in this document.\n{\n  \"context\": {},\n  \"settings\": {\n    \"schema\": {}\n  },\n  \"styles\": {},\n  \"i18n\": {},\n  \"tokens\": {\n    \"em:apiKey\": \"<value>\"\n  },\n  \"services\": {},\n  \"metaData\": {}\n}","how-to-create-and-validate#How to create and validate":"You can test your setup.json file anytime in the Registry Editor Tool\nThe setup.json file is defined by a JSON Schema: setup.json schema.All validations to the setup.json that happens in the Registry Ecosystem, including the Registry Editor Tool, follow this specification.","backward-compatibility#Backward compatibility":"Lorem ipsum lorem","module-payload#Module Payload":"The Module Payload is the initial input that the module receives to render. The data included depends on what is configured in the Setup JSON.In general, it follows this structure.\n{\n  \"context\": {},\n  \"settings\": {},\n  \"globalSettings\": {},\n  \"styles\": {\n    \"value\": {}\n  },\n  \"i18n\": {\n    \"labels\": {}\n  },\n  \"tokens\": {\n    \"em:apiKey\": \"<value>\"\n  },\n  \"services\": {}\n}","setup-json-sections#Setup JSON Sections":"None of the sections (keywords) listed below are required.By specifying and configuring a section, you are telling the system that the module needs the resource represented by that section and the shape.Something to keep in mind, although all the sections represent settings or configurations necessary to render the module, the section specifically called Settings is so called because it defines the settings that will be exposed to being configured by the customer.","context#Context":"This defines some valid context used to load the module.Example:\n{\n  \"context\": {\n    \"airline\": {\n      \"code\": \"cm\"\n    },\n    \"datasource\": {\n      \"step\": \"airModule\"\n    },\n    \"geo\": {\n      \"language\": {\n        \"lang\": \"en\",\n        \"site_edition\": \"en\"\n      }\n    },\n    \"audience\": {\n      \"device_category\": \"desktop\"\n    }\n  }\n}\nModule Payload → In the mock environment you will receive that exact context as part of the Module Payload. In the live environment, that context will be replaced with other values ​​and according to where the module is rendered.","settings#Settings":"Defines the settings that will be exposed to being configured by the user and is more associated to the point of view of business, behavior or user interface.\n{\n  \"settings\": {\n    \"schema\": {\n      \"properties\": {}\n    }\n  }\n}\nThe setup.json file uses the JSON Schema format to define settings schema. That schema must have default values in all the settings values ​​required by the module. The specification in details is explained on the Settings Schema page.Module Payload → In the mock environment you will receive in the settings of the Module Payload an object generated with default values ​​specified in the schema. In the live environment, that settings will be replaced by actual values ​​entered by the customer.","styles#Styles":"Defines the styles settings for the module.\n{\n  \"styles\": {\n    \"service\": \"<styles-service-name>\",\n    \"options\": {\n      \"type\": \"eds\",\n      \"format\": \"json\"\n    }\n  }\n}","internationalization-i18n#Internationalization (i18n)":"Configuration related to internationalization\n{\n  \"i18n\": {\n    \"rtl\": false,\n    \"a11y\": \"WCAG 2.1 AA\",\n    \"language\": \"*\",\n    \"labels\": {\n      \"label-key-1\": \"English value for key 1\",\n      \"label-key-2\": \"English value for key 2\"\n    }\n  }\n}\nStructure:\nKey\tDescription / Values\tDefault value\trtl\tIf the module supports text direction RTL (right to left)\tfalse\ta11y\tAccessibility level supported by the module.\t\"none\"\tlanguage\tThis key describes whether the module supports multi-language or is designed with hard coded labels.\t\"en\"\tlabels\tIn case the module accepts multi-language, this key will contain an object (key values), where the key will be a unique key in our label system (prioritize labels that already exist) and the value will be the corresponding text in English\t\t\nModule Payload → In case the module is multi-language: in the simulated environment, the exact configured labels will be received through the Module Payload. In the live environment, the labels defined in the system by the customer will be received.","tokens#Tokens":"Security tokens.\n{\n  \"tokens\": {\n    \"em:apiKey\": \"<some-very-very-secret-token>\"\n  }\n}","services#Services":"We need a documentation of the services with the list of each one of those available to be used by the Registry\nSpecification of all services used by the module. The urls can be obtained from the official documentation of the APIs.\n{\n  \"services\": {\n    \"some-unique-and-well-known-key\": {\n      \"endpoint\": \"https://services-url/path-to-services\"\n    },\n    \"em:sputnik:search\": {\n      \"endpoint\": \"https://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%airlineCode%%/fares/search\"\n    }\n  }\n}\nAvailable services:\nService Key\tEndpoint\t\tem:sputnik:search\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/search\t\tem:sputnik:aggregation\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/aggregation\t\tem:sputnik:grouped-routes\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/grouped-routes\t\tem:sputnik:histogram\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/histogram\t\tem:sputnik:histogram-distribution\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/histogram-distribution\t\tem:sputnik:popular-destinations\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/popular-destinations\t\tem:sputnik:cash-redemption\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/cash-redemption\t\tem:sputnik:travel-classes\thttps://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/travel-classes\t\tem:hangar:search\thttps://openair-dev.airtrfx.com/hangar-service/v2/%%tenantCode%%/airports/search\t\tem:deeplink\thttps://openair-dev.airtrfx.com/deeplink-service/v2/%%tenantCode%%/deeplinks\t\tem:location:search\thttps://openair-dev.airtrfx.com/location-service/v3/%%tenantCode%%/hierarchies/search\t\tem:location:multi-aggregation\thttps://openair-dev.airtrfx.com/location-service/v3/%%tenantCode%%/hierarchies/language/%%languageCode%%/multi-aggregation\t\tem:location:categories\thttps://openair-dev.airtrfx.com/location-service/v3/%%tenantCode%%/categories/%%categoryId%%/language/%%languageCode%%\t\tem:hospitality:rates-histogram\thttps://openair-dev.airtrfx.com/hospitality-service/v1/%%tenantCode%%/rates/histogram\t\tem:hospitality:rates-aggregation\thttps://openair-dev.airtrfx.com/hospitality-service/v1/%%tenantCode%%/rates/aggregation\t\tem:hospitality:location-all\thttps://openair-dev.airtrfx.com/location-service/v3/%%tenantCode%%/hierarchies/search\t\tem:globe-trotter\thttps://openair-dev.airtrfx.com/globe-trotter-service/v1/%%tenantCode%%/packages/filter\t\t...","metadata#Metadata":"Coming soon. This section would define aspects associated with the module title, version, description, links to documentation, etc etc. Most likely, it is not necessary for the MVP."}},"/learning/registry-script":{"title":"Registry Script","data":{"":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus. Suspendisse viverra, arcu a accumsan vulputate, justo ex luctus nisl, in feugiat elit leo ut purus.Maecenas id feugiat purus. Mauris cursus, mi ac ornare mattis, lorem erat mattis odio, ut gravida urna orci sed nunc. Quisque in est a est molestie dignissim a nec erat. Integer et finibus magna, rhoncus egestas sapien. Quisque vehicula lacinia pretium. Phasellus fringilla eros sed arcu efficitur, vel condimentum arcu malesuada. Curabitur vulputate mi neque, a volutpat arcu ultrices commodo. In lobortis euismod sollicitudin. Integer at commodo nunc, in sagittis sem.","payload#Payload":"isReady().then((payload) => {\n  // Start module execution\n});\nconst payload = await getPayload();","events#Events":"","enter-in-full-size#Enter in full size":"import { triggerAction } from \"@everymundo/registry-script\";\ntriggerAction(\"fullsize:enter\") // Request permission to enter in fullsize\n  .then(() => { // if success add code to enter fullsize (open dialog, etc)\n    console.log(\"--- SUCCCESS\");\n  })\n  .catch((err) => { // if error you can't enter full size\n    console.log(\"--- ERROR\");\n    console.log(\"Error: \", err);\n  });","exit-from-full-size#Exit from full size":"import { triggerAction } from \"@everymundo/registry-script\";\ntriggerAction(\"fullsize:exit\") // Request permission to exit from fullsize\n  .then(() => { // if success add code to exit from fullsize (closet dialog, etc)\n    console.log(\"--- SUCCCESS\");\n  })\n  .catch((err) => { // if error you can't exit from full size\n    console.log(\"--- ERROR\");\n    console.log(\"Error: \", err);\n  });","open-search-panel#Open search panel":"import { triggerAction } from \"@everymundo/registry-script\";\ntriggerAction(\"search-panel:open\", {\n  \"industry\": \"airline\", // industry of the search panel requested, for now airline or hospitality\n  \"payload\": {} // fares o rates content\n}) // Request permission to open the popup\n  .then((result) => { // if success you can trigger tracking events ...\n    console.log(\"--- SUCCCESS\");\n    console.log(\"Result: \", result);\n  })\n  .catch((err) => { // if error you can show error or trigger direct deeplink\n    console.log(\"--- ERROR\");\n    console.log(\"Error: \", err);\n  });"}},"/learning/setup-file/settings":{"title":"Settings","data":{"":"Learning\nSetup.json\nSettings\nDefines the settings that will be exposed to being configured by the user and is more associated to the point of view of business, behavior or user interface.The setup.json file uses the JSON Schema format to define settings schema. That schema must have default values in all the settings values ​​required by the module.\n{\n  \"settings\": {\n    \"schema\": {\n      \"properties\": {}\n    }\n  }\n}","general-attributes#General Attributes":"All field types accept the following attributes:type: Declares the type of the setting field. It can contain these values:\nstring\nboolean\ninteger\nnumber\narray\nobject\ntitle: A text label to accompany the setting field. (e.g. “Initial dates”)description: A longer description of the setting field. (e.g. “Initial\ndates pre populated by default…“)default The default value to be used for the setting field.Keep in mind the default value must be of the type specified by the field. So for example, the default for an array of string type would be [\"Item one\", \"Item two\"].help: Useful indications related to the field (e.g. “'Ctrl + click' to select more than one.”)\n{\n  \"settings\": {\n    \"schema\": {\n      \"properties\": {\n        \"some-property\": {\n          \"type\": \"string\",\n          \"title\": \"Title\",\n          \"description\": \"\"\n        }\n      }\n    }\n  }\n}","primitive-types#Primitive types":"","string#String":"string: Presented as a text inputmaxLength: String types accept a maxLength property which defines the maximum number of characters the field should allow.placeholder: String types allow you to specify the placeholder value which will appear as lighter-than-normal text in the input when it is empty. This is a useful place to include an example of how a value to be placed in that field should look.\n{\n  \"title\": \"Some simple title\",\n  \"type\": \"string\",\n  \"default\": \"Some default value\"\n}","long-string#Long string":"string/textarea: Presented as a text input with validation to ensure the customer provides an email address. The default placeholder can be overridden.\n{\n  \"title\": \"Textarea Example\",\n  \"type\": \"string\",\n  \"format\": \"textarea\",\n  \"default\": \"When the Internet first came, I thought it was just the beacon of freedom. People could communicate with anyone, anywhere, and nobody could stop it.\\n\\n-Steve Wozniak\"\n}","url-string#URL String":"string/url: Presented as a text input with validation to ensure the customer provides a URL. The default placeholder can be overridden.\n{\n  \"title\": \"URL String Example\",\n  \"type\": \"string\",\n  \"format\": \"url\"\n}","email-string#Email String":"string/email: Presented as a text input with validation to ensure the customer provides an email address. The default placeholder can be overridden.\n{\n  \"title\": \"Email String Example\",\n  \"type\": \"string\",\n  \"format\": \"email\"\n}","date#Date":"string/date: Presented to the customer with a date picker. The resulting date value is provided to the app in a format understood by new Date.\n{\n  \"title\": \"Date Example\",\n  \"type\": \"string\",\n  \"format\": \"date\",\n  \"default\": \"2015-10-10\"\n}","integer-number#Integer number":"integer: Presented as a number-style text input which only accepts an integer.Both integers and floating-point numbers can set a minimum and maximum value.\n{\n  \"title\": \"Integer Example\",\n  \"description\": \"Input a number between 5 and 50.\",\n  \"type\": \"integer\",\n  \"default\": 5,\n  \"minimum\": 5,\n  \"maximum\": 50\n}","floating-point-number#Floating-point number":"number: Presented as a number-style text input.\n{\n  \"default\": 0.5,\n  \"title\": \"Number Example\",\n  \"type\": \"number\"\n}","true-or-false-value#True or false value":"boolean: Presented as a checkbox\n{\n  \"title\": \"Boolean Example\",\n  \"type\": \"boolean\"\n}"}},"/learning/workflow":{"title":"Workflow","data":{}},"/references/design-system/formats/css-variables":{"title":"CSS Variables","data":{"":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus. Suspendisse viverra, arcu a accumsan vulputate, justo ex luctus nisl, in feugiat elit leo ut purus. Maecenas id feugiat purus. Mauris cursus, mi ac ornare mattis, lorem erat mattis odio, ut gravida urna orci sed nunc. Quisque in est a est molestie dignissim a nec erat. Integer et finibus magna, rhoncus egestas sapien. Quisque vehicula lacinia pretium. Phasellus fringilla eros sed arcu efficitur, vel condimentum arcu malesuada. Curabitur vulputate mi neque, a volutpat arcu ultrices commodo. In lobortis euismod sollicitudin. Integer at commodo nunc, in sagittis sem."}},"/migration-guide":{"title":"Migration Guide","data":{"get-started--knowing-this-mamotreto#Get Started / Knowing this \"mamotreto\"":"This is a detailed guide to accelerate the migration of existing PROS modules to the Developer Hub Ecosystem.\nIt serves as a complement to other tools for organizing internal processes.It will be useful as long as the modules meet these conditions:\nThe module is already working in production.\nThe module currently uses our services (although not necessarily the latest versions)\nThe module already use labels defined in the system.\nThe module has required settings to be functional and flexible according to our needs.\nThe module has styling mechanisms that apply Design System (formerly EDS) even if it is not directly connected to tokens.\nThe module use our tracking services.\nIn-depth information can be found in specialized sections of the documentation\nIn this guide, Developer Hub and Registry are used to refer to the same concept.","good-to-know#Good to know":"If you have more questions that cannot be resolved with this guide or this documentation site, please get in touch. We will resolve your doubt by expanding/improving this documentation.\nIf you find any typographical errors, or have suggestions for changes to the documentation, you can manage them directly by editing the pages and making a Pull Request. This documentation is in a public repository.","key-concepts#Key concepts":"","architecture#Architecture":"Developer Hub Modules (for now) load inside an Iframe on the client page. Broadly speaking, the elements described below are key in the workflow.\nAdnetify Script\nModule Manager\nRegistry Script","adnetify-script#Adnetify Script":"Adnetify Script is a code that is delivered to the client and is responsible for scanning the entire page and detecting assigned spaces (slots) to place modules and other significant information such as the client's URL, data layers, etc. Adnetify Script communicates with a service in the backend called Module Manager who is responsible for determining based on the information obtained by Adnetify Script which modules should be loaded in each slot found on the client page. To load the module, Adnetify Script also has another important task: communication with a script that lives inside the module called Registry Script.","module-manager#Module Manager":"Module Manager is the brain in the entire process of putting a module live to the client. It is a group of services that are consumed by Adnetify Script.","registry-script#Registry Script":"Registry Script is the only concept mentioned in this section that will be directly used in the development of the module. It is a library that you must have as a dependency in your project.This library is the one that communicates with Adnetify Script to obtain the module startup data, which we call Module Payload.It also takes care of other extra tasks such as adapting the Iframe to the dimensions of the module, opening the module in full size, triggering the popup, etc. etc.","what-is-a-developer-hub-module#What is a Developer Hub Module?":"A Developer Hub Module must be a quality app that meets the standards and market needs associated with the functional and non-functional requirements provided by PROS.However, at a more basic technical level, we can summarize that a app becomes a Developer Hub Module if it meets the following:\nThe app is a web application with an index.html in the root of the build folder.\nThere should be a setup.json file in the root of the build folder\nThe project must install and use @everymundo/registry-script dependency","setupjson-and-module-payload#Setup.json and Module Payload":"Setup.json: A configuration file setup.json that be uploaded with the project build. Is a JSON file that acts as a vital contract between the module and the system. It technically describes module settings, integration with the design system, label definitions, API usage, resource permissions, (...)Module Payload: An object that will contain all the values ​​that are needed to run the module. For example, the context, settings, Design System tokens, labels, etc. This object is returned by the Registry Script library.","development-testing-and-deployment-tools#Development, testing and deployment tools.":"Registry CLI\n(Must be installed). Command-line interface for Developer Hub.\nAllows to communicate with the platform and deploy/promote modules.\nRequires authentication.\nhttps://www.npmjs.com/package/@everymundo/em-registry-cli\nEditor\nA tool from the Developer Hub that accelerates the construction of the digital contract Setup.json without the need for the module to be developed yet.\nhttps://everymundo.github.io/developer-hub/editor\nPlayground\nTool that allows the development and QA of a module without the need for the real environment. This tool creates a Module Payload (input config for Module) with mock data using the configuration specified in Setup JSON.\nhttps://everymundo.github.io/developer-hub/playground","internal-concepts#Internal concepts":"In addition to the previous concepts, you should also know about terms such as Context, how to use our Services/Apis, details about the Design System (formerly EDS), specific events of the Tracking Library, etc. etc.","things-we-already-have--things-we-need#Things we already have / Things we need.":"A module working in production\nWhat we need?\nWrap it in an app with the specifications of a Developer Hub module.\nDeploy to the PROS ecosystem of the Developer Hub using Registry CLI\nAdd new events to request the module in \"fullscreen\" or trigger the \"Popup\"\nA module currently using our services\nWhat we need?\nAdd in the setup.json the services configuration and include all the services used by the module according to the convention\nMigrate services to what we call Smart Services.\nA module using labels defined in the system\nWhat we need?\nMake an inventory of all the label keys used by the Module.\nAdd the i18n configuration to setup.json and include all the labels keys that the module has with their respective values ​​in English.\nA module using required settings to be functional and flexible\nWhat we need?\nAdd to setup.json the configuration to use custom settings\nDefine the structure of the module settings using the generic settings templates provided\nConnect the new settings values ​​received through the Module Payload with the way the module internally handles the settings.\nA module using styling mechanisms that apply Design System (formerly EDS)\nWhat we need?\nAdd to setup.json the configuration to use Design System style tokens.\nMake the necessary mapping transformations between the received Design System tokens and the internal token structure used by the module.\nA module using our tracking services\nWhat we need?\nMigrate to the new module tracking library.","straight-to-the-point#Straight to the point":"","obtaining-credentials#Obtaining credentials":"Before being able to interact with the platform you need to have available certain credentials necessary to deploy the module and also to interact with the services/apis.\nRegistry CLI credentials (user, key).\nServices/Apis token.\nThere is no reason to stop if you do not yet have the final Registry CLI credentials. You can advance in everything else except what is related to module deployment/promotion.","wrap-module-in-a-registry-module#Wrap module in a Registry module":"At this point you should have code for a functional module (usually as a component in React) but that has not yet been integrated into the Developer Hub Ecosystem.What we will do in this step is wrap that module in an application that has the requirements to be rendered as a Developer Hub Module.Assuming that the module you already have is developed in React, and taking into account the previously mentioned requirements that make any project a Developer Hub Module, we recommend that to start getting familiar with the ecosystem you try using one of our hello-react created with Vite (Later you can create your own projects with your own tools optimized to your needs.):\nnpx degit Everymundo/developer-hub/examples/hello-react your-project-folder-name\nThe following link shows a production-ready module in the Playground: https://everymundo.github.io/developer-hub/playground/?url=https://modules.everymundo.work/prod/FRONT10/FRONT10-001/20240425194647/index.html","project-structure#Project structure":"By executing the above command you will get a web application with the following structure. This application already meets the requirements to be considered a Developer Hub Module.\nThree files have been highlighted because they are closely associated with the integration with the Developer Hub Ecosystem and will be mentioned repeatedly in the following steps of this guide:\npublic/setup.json\npackage.json\nsrc/index.js\nsrc/components/App/App.jsx","setupjson-and-module-payload-in-practice#Setup.json and Module Payload in practice":"Setup.json example:\n{\n  \"context\": {},\n  \"settings\": {\n    \"schema\": {\n      \"properties\": {\n        \"title\": {\n          \"title\": \"Title\",\n          \"description\": \"Description, lorem ipsum lorem ..\",\n          \"help\": \"Hint: Text next to a field to guide the end user filling it\",\n          \"placeholder\": \"Placeholder ..\",\n          \"type\": \"string\",\n          \"default\": \"Hello React\"\n        }\n      }\n    }\n  },\n  \"styles\": {\n    \"service\": \"codeless\",\n    \"options\": {\n      \"type\": \"eds\",\n      \"format\": \"json\"\n    }\n  },\n  \"i18n\": {\n    \"rtl\": true,\n    \"language\": \"*\",\n    \"labels\": {\n      \"label-key-1\": \"English value for key 1\",\n      \"label-key-2\": \"English value for key 2\"\n    }\n  },\n  \"tokens\": {\n    \"em:apiKey\": \"<some-very-very-secret-token>\"\n  },\n  \"services\": {\n    \"some-unique-and-well-known-key\": {\n      \"endpoint\": \"https://services-url/path-to-services\"\n    },\n    \"em:sputnik:search\": {\n      \"endpoint\": \"https://openair-dev.airtrfx.com/airfare-sputnik-service/v3/%%tenantCode%%/fares/search\"\n    }\n  },\n  \"metaData\": {}\n}\nPayload example\n{\n  \"context\": {},\n  \"settings\": {},\n  \"styles\": {\n    \"value\": {}\n  },\n  \"i18n\": {\n    \"labels\": {}\n  },\n  \"tokens\": {\n    \"em:apiKey\": \"<value>\"\n  },\n  \"services\": {}\n}","using-registry-script-in-indexjs#Using Registry Script in index.js.":"import { isReady } from \"@everymundo/registry-script\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./components/App\";\nimport getCmpConfig from \"./utils/getCmpConfig\";\nisReady().then(async (payload) => {\n  // Transform data received from the payload to what is expected by the module\n  const cmpConfig = await getCmpConfig(payload);\n  ReactDOM.createRoot(document.getElementById(\"root\")).render(\n    <App cmpConfig={cmpConfig} />\n  );\n});\nimport React from \"react\";\nimport FcBookingContainer from \"@everymundo/em-cmp-lib-airmodules-components/src/components/em-cmp-flights-booking/container/FlightsBooking\";\nimport DynamicContextInterceptor from \"@everymundo/em-cmp-lib-airmodules-components/src/components/em-cmp-flights-booking/container/DynamicContextInterceptor\";\nimport ThemeProvider from \"@everymundo/em-cmp-lib-airmodules-components/src/atoms/services/theme/context/ThemeProvider\";\nconst Container = ({ children }) => (\n  <div style={{ maxWidth: 1200, margin: \"auto\", minHeight: 600 }}>\n    {children}\n  </div>\n);\nconst App = ({ cmpConfig }) => (\n  <Container>\n    <ThemeProvider theme={cmpConfig.theme} loadTailwind={true}>\n      <DynamicContextInterceptor>\n        <FcBookingContainer cmpConfig={cmpConfig} />\n      </DynamicContextInterceptor>\n    </ThemeProvider>\n  </Container>\n);\nexport default App;","special-events-fullscreen-and-popup#Special events: \"Fullscreen\" and \"Popup\".":"(Explanation of the new event names and how to use them with promises.)","settings-definition-form#Settings definition (Form)":"The convention for defining module settings is based on Json Schema with some minor tweaks specific to the Developer Hub.Use the following real example of a module in production as a starting point for creating the Setup.json of your new module. The following link opens the Setup.json of that module in the Editor (Add or remove to suit module needs):https://everymundo.github.io/developer-hub/editor/?setup=https://modules.everymundo.work/prod/FRONT10/FRONT10-001/20240425194647/setup.json","consuming-eds#Consuming EDS":"(Describe where the tokens are received, the structure of the object, how to print the sources and list of all the tokens.)","i18n--label-translation#I18N / Label Translation":"(Brief description of some attributes of i18n and how to extract the module labels.)","migration-of-servicesapis#Migration of Services/APIS":"(How services are defined in Setup.json and how to migrate to new versions.)","tracking-library#Tracking library":"(Link to the tracking library.)","deploy-new-module-using-registry-cli#Deploy new module using Registry CLI":"","whats-next#Whats Next?":""}},"/references/design-system/formats/custom-json-format":{"title":"Custom JSON Format","data":{"":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus. Suspendisse viverra, arcu a accumsan vulputate, justo ex luctus nisl, in feugiat elit leo ut purus. Maecenas id feugiat purus. Mauris cursus, mi ac ornare mattis, lorem erat mattis odio, ut gravida urna orci sed nunc. Quisque in est a est molestie dignissim a nec erat. Integer et finibus magna, rhoncus egestas sapien. Quisque vehicula lacinia pretium. Phasellus fringilla eros sed arcu efficitur, vel condimentum arcu malesuada. Curabitur vulputate mi neque, a volutpat arcu ultrices commodo. In lobortis euismod sollicitudin. Integer at commodo nunc, in sagittis sem."}},"/references/design-system/formats/json":{"title":"JSON Object","data":{"":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus. Suspendisse viverra, arcu a accumsan vulputate, justo ex luctus nisl, in feugiat elit leo ut purus. Maecenas id feugiat purus. Mauris cursus, mi ac ornare mattis, lorem erat mattis odio, ut gravida urna orci sed nunc. Quisque in est a est molestie dignissim a nec erat. Integer et finibus magna, rhoncus egestas sapien. Quisque vehicula lacinia pretium. Phasellus fringilla eros sed arcu efficitur, vel condimentum arcu malesuada. Curabitur vulputate mi neque, a volutpat arcu ultrices commodo. In lobortis euismod sollicitudin. Integer at commodo nunc, in sagittis sem."}},"/references/design-system/formats":{"title":"Formats","data":{}},"/references/design-system":{"title":"Design System (EDS)","data":{}},"/references/iframes":{"title":"Iframes","data":{}},"/references/services-layer/fares-search-service":{"title":"Fares Search Services","data":{"pricing#Pricing":"Price search by currency (USD) or currency with  format (USD 1,200).","search#Search":"Key\tValue Type\tDescription\tExample\toriginMarkets\tstring[]optional\tTwo letter country-market code, example \"US\". Filters based on the Country Market of the Origin Airport / Bus Code.\t{ \"originMarkets\": [ \"US\", \"FR\" ] }JSON No default\tdestinationMarkets\tstring[]optional\tTwo letter country-market code, example \"US\". Filters based on the Country Market of the Destination Airport / Bus Code.\t{ \"destinationMarkets\": [ \"US\", \"FR\" ] }JSON No default\torigins\tstring[]optional\tAirport / Bus Station Code, example \"MIA\". Filters based on the Origin Codes.\t{ \"origins\": [ \"MIA\", \"NYC\" ] }JSON No default\tdestinations\tstring[]optional\tAirport / Bus Station Code, example \"MIA\". Filters based on the Destination Codes.\t{ \"destinations\": [ \"ORD\", \"LAX\" ] }JSON No default\tcurrencies\tstring[]optional\tThree letter currency code, example \"USD\". Filters based on the Currency Code(s) that are sent.\t{ \"currencies\": [ \"USD\" ] }JSON No default\tsiteEdition\tstringoptional\tOption to send full site edition code, or country-market code of the site edition, example \"en-us\" or \"us\". The site edition refers to the Site Edition that the Fare was collected from in the customer's IBE. Filters fares collected in the site edition, or site edition market, sent.\t{ \"siteEdition\": \"US\" }JSON No default\t\nThe smart feature is enabled when the payload contains the autoSettings object.\n\"autoSettings\": {\n    \"language\": \"en\",\n    \"market\": \"ES\"\n}"}},"/references/services-layer/hangar-service":{"title":"Hangar Service","data":{"":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus. Suspendisse viverra, arcu a accumsan vulputate, justo ex luctus nisl, in feugiat elit leo ut purus. Maecenas id feugiat purus. Mauris cursus, mi ac ornare mattis, lorem erat mattis odio, ut gravida urna orci sed nunc. Quisque in est a est molestie dignissim a nec erat. Integer et finibus magna, rhoncus egestas sapien. Quisque vehicula lacinia pretium. Phasellus fringilla eros sed arcu efficitur, vel condimentum arcu malesuada. Curabitur vulputate mi neque, a volutpat arcu ultrices commodo. In lobortis euismod sollicitudin. Integer at commodo nunc, in sagittis sem.","getting-started#Getting Started":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.","generate-a-new-site#Generate a new site":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.\nnpx @docusaurus/init@latest init my-website classic","start-your-site#Start your site":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.\ncd my-website\nnpx docusaurus start\nQuisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis."}},"/references/services-layer/deep-link-service":{"title":"Deep link Service","data":{"":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus. Suspendisse viverra, arcu a accumsan vulputate, justo ex luctus nisl, in feugiat elit leo ut purus. Maecenas id feugiat purus. Mauris cursus, mi ac ornare mattis, lorem erat mattis odio, ut gravida urna orci sed nunc. Quisque in est a est molestie dignissim a nec erat. Integer et finibus magna, rhoncus egestas sapien. Quisque vehicula lacinia pretium. Phasellus fringilla eros sed arcu efficitur, vel condimentum arcu malesuada. Curabitur vulputate mi neque, a volutpat arcu ultrices commodo. In lobortis euismod sollicitudin. Integer at commodo nunc, in sagittis sem.","getting-started#Getting Started":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.","generate-a-new-site#Generate a new site":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.\nnpx @docusaurus/init@latest init my-website classic","start-your-site#Start your site":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.\ncd my-website\nnpx docusaurus start\nQuisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis."}},"/references/services-layer/histogram-service":{"title":"Histogram Service","data":{"":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus. Suspendisse viverra, arcu a accumsan vulputate, justo ex luctus nisl, in feugiat elit leo ut purus. Maecenas id feugiat purus. Mauris cursus, mi ac ornare mattis, lorem erat mattis odio, ut gravida urna orci sed nunc. Quisque in est a est molestie dignissim a nec erat. Integer et finibus magna, rhoncus egestas sapien. Quisque vehicula lacinia pretium. Phasellus fringilla eros sed arcu efficitur, vel condimentum arcu malesuada. Curabitur vulputate mi neque, a volutpat arcu ultrices commodo. In lobortis euismod sollicitudin. Integer at commodo nunc, in sagittis sem.","getting-started#Getting Started":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.","generate-a-new-site#Generate a new site":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.\nnpx @docusaurus/init@latest init my-website classic","start-your-site#Start your site":"Quisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis.\ncd my-website\nnpx docusaurus start\nQuisque eget nibh auctor, iaculis erat et, semper arcu. Integer a erat augue. Ut molestie erat et cursus ullamcorper. Quisque et aliquam mi. Suspendisse commodo nisi ipsum, vel lobortis sem ornare sed. Morbi non pulvinar magna. Phasellus condimentum risus et ante rutrum mattis."}},"/tutorial":{"title":"Tutorial","data":{"":"The following tutorial lays out a basic initial path to start using the Developer Hub. Alternate paths are omitted to simplify familiarization with the environment.","tldr#TL;DR":"Below is the live example of what will be achieved by the end of this tutorial and the source code.","lets-start-coding#Let's start coding":"","create-new-module#Create new module":"To start we are going to use React as technology and create the project with the tool Create React App using a basic template adapted to the Developer Hub: @everymundo/registry-module.Run the following command to build the project: (hello-react will be used as the project name and folder)\nnpx create-react-app hello-react --template=@everymundo/registry-module\nNote: This started template also has Craco and Storybook configured.","project-structure#Project structure":"When the project hello-react has been generated you'll see the following folders and files:\nThree files have been highlighted because they are closely associated in the integration with the Registry Ecosystem:\npublic/setup.json\npackage.json\nsrc/index.js","setupjson-file#Setup.json file":"The Setup.json is the module contract. This file defines the needs of the module and its behavior with respect to the Developer Hub.In this tutorial the module will define some configuration in the setup.json:\nA dynamic settings title of type string.\nA label has been used with the key example-label-key.\nAlso it is specified that the module will consumed dynamic styles tokens from EDS Design System.\n{\n  \"metaData\": {},\n  \"context\": {},\n  \"settings\": {\n    \"schema\": {\n      \"properties\": {\n        \"title\": {\n          \"title\": \"Title\",\n          \"description\": \"Description, lorem ipsum lorem ..\",\n          \"help\": \"Hint: Text next to a field to guide the end user filling it\",\n          \"placeholder\": \"Placeholder ..\",\n          \"type\": \"string\",\n          \"default\": \"Hello React\"\n        }\n      }\n    }\n  },\n  \"styles\": {\n    \"service\": \"codeless\",\n    \"options\": {\n      \"type\": \"eds\",\n      \"format\": \"json\"\n    }\n  },\n  \"i18n\": {\n    \"labels\": {\n      \"example-label-key\": \"Primary color\"\n    }\n  },\n  \"tokens\": {},\n  \"services\": {}\n}\nNote: When you build the project, you must make sure that this setup.json file goes to the root of the generated folder.","packagejson-with-everymundoregistry-script#Package.json (with @everymundo/registry-script)":"It is important that you include @everymundo/registry-script library as a dependency. Registry Script is the library that allows communication with the Developer Hub.\n{\n  \"name\": \"hello-react\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@everymundo/registry-script\": \"latest\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-scripts\": \"5.0.1\"\n  },\n  \"scripts\": {\n    \"start\": \"craco start\",\n    \"build\": \"craco build\",\n    \"test\": \"craco test\",\n    \"eject\": \"react-scripts eject\",\n    \"storybook\": \"start-storybook -p 6006 -s public\",\n    \"build-storybook\": \"build-storybook -s public\"\n  },\n  \"eslintConfig\": { ... },\n  \"browserslist\": { ... },\n  \"homepage\": \".\",\n  \"devDependencies\": { ... }\n}","registry-script-in-indexjs#Registry Script in index.js":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus.\nimport { isReady } from \"@everymundo/registry-script\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nisReady().then(async (payload) => {\n  ReactDOM.render(<App payload={payload} />, document.getElementById(\"root\"));\n});","develop-your-module#Develop your module":"Super, the new module has been created in the hello-react/ folder. Access that folder and start the development server.\ncd hello-react\nnpm start\nAt this point you can familiarize yourself with the code and add the functionality you need. Here are some suggestions.","enrich-setupjson-using-registry-editor#Enrich setup.json using Registry Editor":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus.","develop-and-test-with-registry-playground#Develop and test with Registry Playground":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc lacinia, turpis eu sodales efficitur, justo nibh molestie orci, id malesuada odio velit eu lacus.Note: that in order to view the project you must open it using the Registry Playground: https://everymundo.github.io/developer-hub/playground/?url=http://localhost:3000/","deploy-module#Deploy module":"Once the module is ready, it is time to deploy it. For this we will use the Registry CLI","install-registry-cli#Install Registry CLI":"The following command installs the Registry CLI globally:\nnpm i -g @everymundo/em-registry-cli","set-your-credentials#Set your Credentials":"Then, let's authenticate to the Ecosystem. You must enter the credentials provided, if you do not yet have them, request them before.\nregistry configure\n? What's the accountId [] ABCD\n? \"What's the userId [] user1\"\n? \"What's the userId [] user1\"","define-a-new-module#Define a new module":"This step is to associate your local module with a new module registered in the ** Developer Hub**. To run the following command you must be inside the project folder (in this hello-react tutorial).\nregistry create\n? Module name <Some name>\n? What companies are you building this module for? *\n? What's the build directory? build\n? What's the pre package command? npm run build\nYou will notice that if everything happens correctly an em-module.json file will be created","push-the-module#Push the module":"Once your module has been registered you can deploy the code.\nregistry package --build --push\nThis step will build the module and upload it to the servers. A preview URL of the module is returned, you can view it using the Registry Playground. You will be able to do as many pushes as you need, and you will always get a different preview URL.","whats-next#Whats Next?":""}},"/references/services-layer":{"title":"Service Layer","data":{"":"The helper javascript library access point for all runtime requests made for airModules™. Allows the use of dynamic values that are updated based on placement, this includes: tenant code; API keys; JWTs; Theme tokens; Language; etc."}}}